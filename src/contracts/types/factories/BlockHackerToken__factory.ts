/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  BlockHackerToken,
  BlockHackerTokenInterface,
} from "../BlockHackerToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280601081526020016f213637b1b5a430b1b5b2b92a37b5b2b760811b815250604051806040016040528060038152602001622425a960e91b81525081600390805190602001906200006f92919062000281565b5080516200008590600490602084019062000281565b50506005805460ff19169055506200009d33620000cb565b620000c533620000b06012600a6200038b565b620000bf90620f424062000459565b62000125565b620004ce565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216620001815760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064015b60405180910390fd5b6200018f600083836200021c565b8060026000828254620001a3919062000327565b90915550506001600160a01b03821660009081526020819052604081208054839290620001d290849062000327565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b60055460ff1615620002645760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640162000178565b6200027c8383836200027c60201b620005931760201c565b505050565b8280546200028f906200047b565b90600052602060002090601f016020900481019282620002b35760008555620002fe565b82601f10620002ce57805160ff1916838001178555620002fe565b82800160010185558215620002fe579182015b82811115620002fe578251825591602001919060010190620002e1565b506200030c92915062000310565b5090565b5b808211156200030c576000815560010162000311565b600082198211156200033d576200033d620004b8565b500190565b600181815b8085111562000383578160001904821115620003675762000367620004b8565b808516156200037557918102915b93841c939080029062000347565b509250929050565b60006200039c60ff841683620003a3565b9392505050565b600082620003b45750600162000453565b81620003c35750600062000453565b8160018114620003dc5760028114620003e75762000407565b600191505062000453565b60ff841115620003fb57620003fb620004b8565b50506001821b62000453565b5060208310610133831016604e8410600b84101617156200042c575081810a62000453565b62000438838362000342565b80600019048211156200044f576200044f620004b8565b0290505b92915050565b6000816000190483118215151615620004765762000476620004b8565b500290565b600181811c908216806200049057607f821691505b60208210811415620004b257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b610d8680620004de6000396000f3fe608060405234801561001057600080fd5b50600436106100e65760003560e01c806306fdde03146100eb578063095ea7b31461010957806318160ddd1461012c57806323b872dd1461013e578063313ce5671461015157806339509351146101605780633f4ba83a1461017357806340c10f191461017d5780635c975abb1461019057806370a082311461019b578063715018a6146101c45780638456cb59146101cc5780638da5cb5b146101d457806395d89b41146101e9578063a457c2d7146101f1578063a9059cbb14610204578063dd62ed3e14610217578063f2fde38b1461022a575b600080fd5b6100f361023d565b6040516101009190610c1f565b60405180910390f35b61011c610117366004610be2565b6102cf565b6040519015158152602001610100565b6002545b604051908152602001610100565b61011c61014c366004610ba7565b6102e7565b60405160128152602001610100565b61011c61016e366004610be2565b61030b565b61017b61032d565b005b61017b61018b366004610be2565b61036f565b60055460ff1661011c565b6101306101a9366004610b54565b6001600160a01b031660009081526020819052604090205490565b61017b6103ac565b61017b6103e5565b6101dc61041c565b6040516101009190610c0b565b6100f3610430565b61011c6101ff366004610be2565b61043f565b61011c610212366004610be2565b6104ba565b610130610225366004610b75565b6104c8565b61017b610238366004610b54565b6104f3565b60606003805461024c90610cf5565b80601f016020809104026020016040519081016040528092919081815260200182805461027890610cf5565b80156102c55780601f1061029a576101008083540402835291602001916102c5565b820191906000526020600020905b8154815290600101906020018083116102a857829003601f168201915b5050505050905090565b6000336102dd818585610598565b5060019392505050565b6000336102f58582856106bc565b610300858585610736565b506001949350505050565b6000336102dd81858561031e83836104c8565b6103289190610cd1565b610598565b3361033661041c565b6001600160a01b0316146103655760405162461bcd60e51b815260040161035c90610c9c565b60405180910390fd5b61036d6108fd565b565b3361037861041c565b6001600160a01b03161461039e5760405162461bcd60e51b815260040161035c90610c9c565b6103a8828261098a565b5050565b336103b561041c565b6001600160a01b0316146103db5760405162461bcd60e51b815260040161035c90610c9c565b61036d6000610a63565b336103ee61041c565b6001600160a01b0316146104145760405162461bcd60e51b815260040161035c90610c9c565b61036d610abd565b60055461010090046001600160a01b031690565b60606004805461024c90610cf5565b6000338161044d82866104c8565b9050838110156104ad5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161035c565b6103008286868403610598565b6000336102dd818585610736565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b336104fc61041c565b6001600160a01b0316146105225760405162461bcd60e51b815260040161035c90610c9c565b6001600160a01b0381166105875760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161035c565b61059081610a63565b50565b505050565b6001600160a01b0383166105fa5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161035c565b6001600160a01b03821661065b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161035c565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006106c884846104c8565b9050600019811461073057818110156107235760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161035c565b6107308484848403610598565b50505050565b6001600160a01b03831661079a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161035c565b6001600160a01b0382166107fc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161035c565b610807838383610b15565b6001600160a01b0383166000908152602081905260409020548181101561087f5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161035c565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906108b6908490610cd1565b92505081905550826001600160a01b0316846001600160a01b0316600080516020610d31833981519152846040516108f091815260200190565b60405180910390a3610730565b60055460ff166109465760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161035c565b6005805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516109809190610c0b565b60405180910390a1565b6001600160a01b0382166109e05760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161035c565b6109ec60008383610b15565b80600260008282546109fe9190610cd1565b90915550506001600160a01b03821660009081526020819052604081208054839290610a2b908490610cd1565b90915550506040518181526001600160a01b03831690600090600080516020610d318339815191529060200160405180910390a35050565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60055460ff1615610ae05760405162461bcd60e51b815260040161035c90610c72565b6005805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586109733390565b60055460ff16156105935760405162461bcd60e51b815260040161035c90610c72565b80356001600160a01b0381168114610b4f57600080fd5b919050565b600060208284031215610b65578081fd5b610b6e82610b38565b9392505050565b60008060408385031215610b87578081fd5b610b9083610b38565b9150610b9e60208401610b38565b90509250929050565b600080600060608486031215610bbb578081fd5b610bc484610b38565b9250610bd260208501610b38565b9150604084013590509250925092565b60008060408385031215610bf4578182fd5b610bfd83610b38565b946020939093013593505050565b6001600160a01b0391909116815260200190565b6000602080835283518082850152825b81811015610c4b57858101830151858201604001528201610c2f565b81811115610c5c5783604083870101525b50601f01601f1916929092016040019392505050565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115610cf057634e487b7160e01b81526011600452602481fd5b500190565b600181811c90821680610d0957607f821691505b60208210811415610d2a57634e487b7160e01b600052602260045260246000fd5b5091905056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220d65277dcc0b785da6dae3b83c9b7a18bcfe42c9ae8d55c6352bc98bcdf0f148364736f6c63430008040033";

type BlockHackerTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BlockHackerTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BlockHackerToken__factory extends ContractFactory {
  constructor(...args: BlockHackerTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BlockHackerToken> {
    return super.deploy(overrides || {}) as Promise<BlockHackerToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BlockHackerToken {
    return super.attach(address) as BlockHackerToken;
  }
  override connect(signer: Signer): BlockHackerToken__factory {
    return super.connect(signer) as BlockHackerToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BlockHackerTokenInterface {
    return new utils.Interface(_abi) as BlockHackerTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BlockHackerToken {
    return new Contract(address, _abi, signerOrProvider) as BlockHackerToken;
  }
}
